{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Jeux 2D - C\u00e9gep de Victoriaville","text":""},{"location":"#enseignant","title":"Enseignant","text":"<p>Chaieb, Cirine</p>"},{"location":"#horaire","title":"Horaire","text":"<p>\u00c0 venir</p>"},{"location":"#planification-de-la-session","title":"Planification de la session","text":"<p>\u00c0 venir</p>"},{"location":"environement/","title":"Environement de d\u00e9veloppement","text":"<p>\u00c9l\u00e9ments de comp\u00e9tence cibl\u00e9s</p> <p>00SW - 2 : Pr\u00e9parer l\u2019environnement de d\u00e9veloppement informatique 00SW - 3 : G\u00e9n\u00e9rer des repr\u00e9sentations de mondes r\u00e9els ou imaginaires</p> <p>Habilet\u00e9s</p> <ul> <li>Importer les sources</li> <li>Int\u00e9grer des images, scripts et objets</li> </ul>"},{"location":"environement/#le-moteur-de-jeu-unity","title":"Le moteur de jeu Unity","text":"<p>Un jeu ou une simulation est enrigistr\u00e9e dans un dossier du m\u00eame nom que le projet de d\u00e9veloppement.</p> <p>Pour \u00e9viter les erreurs et faciliter le travail, cr\u00e9ez un dossier d\u00e9di\u00e9 sur votre disque.</p> <p>ATTENTION! : Cr\u00e9er le dossier ailleurs que dans votre dossier Documents ou One Drive (ou tout autre dossier infonuagique). </p>"},{"location":"environement/#ajouter-un-projet-existant","title":"Ajouter un projet existant","text":"<ul> <li>T\u00e9l\u00e9charger le projet Environnement dans la section fichiers de votre groupe Teams pour le cours.</li> <li>D\u00e9marrer Unity Hub</li> <li>Dans la section Projects, cliquer sur ajouter puis rep\u00e9rer le dossier du projet et l'ouvrir.</li> </ul>"},{"location":"environement/#interface","title":"Interface","text":"<ul> <li>Quatres fen\u00eatres principales : Hierarchy, Scene, Project, Inspector</li> </ul>"},{"location":"environement/#en-pratique","title":"En pratique","text":""},{"location":"environement/#creer-et-ouvrir-une-scene","title":"Cr\u00e9er et ouvrir une sc\u00e8ne","text":"<ul> <li>Dans l'explorateur de projet choisir le dossier Scenes</li> <li>Dans la sectoin \u00e0 droite, ouvrir le menu contextuel (clique droit) </li> <li>Choisir Create \u00ad&gt; Scene puis renommer la nouvelle sc\u00e8ne.</li> <li>Ouvrir la nouvelle sc\u00e8ne en la double cliquant dans l'explorateur de projet</li> <li>Revenir \u00e0 la sc\u00e8ne Environement</li> </ul>"},{"location":"environement/#explorer-la-scene","title":"Explorer la sc\u00e8ne","text":"<ul> <li>Dans la fen\u00eatre de sc\u00e8ne, utiliser le bouton de droite ou le bouton central pour cliquer et glisser. </li> <li>Remarquer que le curseur se change en main et on d\u00e9place le point de vue que nous avons sur la sc\u00e8ne.</li> <li>Les fl\u00e8ches du clavier sont un autre moyen de d\u00e9placer le point de vue.</li> <li>Dans la fen\u00eatre de hi\u00e9rarchie, double cliquer un GameObject. La vue de sc\u00e8ne est centr\u00e9e sur cet \u00e9l\u00e9ment.</li> <li>Il est possible de s\u00e9lectionner l'\u00e9l\u00e9ment et utiliser la touche F pour faire la m\u00eame chose.</li> <li>Double cliquer le GameObject fond permettra d'avoir une vue d'ensemble de la sc\u00e8ne.</li> </ul>"},{"location":"environement/#creer-et-modifier-un-nouveau-gameobject","title":"Cr\u00e9er et modifier un nouveau GameObject","text":"<ul> <li>Dans l'explorateur de projet, ouvrir le dossier Art puis cliquer et glisser l'item Joueur dans la vue de la sc\u00e8ne.</li> <li>Remarquer les changements, on voit le joueur dans la sc\u00e8ne et un GameObject a \u00e9t\u00e9 cr\u00e9e dans la fen\u00eatre de hi\u00e9rachie.</li> <li>S\u00e9lectionner le GameObject Joueur dans le fen\u00eatre de hi\u00e9rarchie.</li> <li>Dans l'inspecteur localiser les propri\u00e9t\u00e9s X et Y. Modifier la valeur pour 0.</li> <li>Le joueur est maintenant au centre de la sc\u00e8ne.</li> <li>Sauvegarder votre projet par le menu File &gt; Save ou le raccourci CTRL + S</li> </ul>"},{"location":"environement/#tester-le-resultat-en-mode-jeu","title":"Tester le r\u00e9sultat en mode jeu","text":"<ul> <li>Le mode jeu permet de tester une sc\u00e8ne.</li> <li>Localiser et activer le bouton lecture en haut de la fen\u00eatre de sc\u00e8ne.</li> <li>On peut maintenant voir le r\u00e9sultat de notre sc\u00e8ne telle que le joueur la voit. Il ne se pas grand chose pour le moment!</li> <li>Sortir du mode jeu en cliquant le bouton lecture.</li> </ul>"},{"location":"environement/#modifier-un-gameobject-en-ajoutant-des-composantes-component","title":"Modifier un GameObject en ajoutant des composantes (Component)","text":"<ul> <li>Localiser le dossier Script dans l'explorateur de projet.</li> <li>Avec le GameObject Joueur s\u00e9lectionn\u00e9, cliquer et glisser le script MvmtJoueur dans une zone vide de l'inspecteur.</li> <li>Un nouveau component MvmtJoueur, de type script, se retrouve dans la liste des composantes.</li> <li>Tester le r\u00e9sultat, le joueur se d\u00e9place lat\u00e9ralement avec les touches AD</li> </ul>"},{"location":"environement/#modifier-les-elements-dans-la-fenetre-de-scene","title":"Modifier les \u00e9l\u00e9ments dans la fen\u00eatre de sc\u00e8ne","text":"<ul> <li>S\u00e9lectionner le Joueur dans la fen\u00eatre de hi\u00e9rarchie</li> <li>Localiser et cliquer sur l'outil de d\u00e9placement dans la fen\u00eatre de sc\u00e8ne (fl\u00e8che 4 directions en dessous de la main)</li> <li>Deux fl\u00e8ches apparaissent (verte et rouge).</li> <li>Utiliser les fl\u00e8ches dans la vue de sc\u00e8ne pour placer le joueur vers la gauche et au centre de la cam\u00e9ra (bordure blanche).</li> <li>S\u00e9lectionner l'outil de rotation (en-dessous de l'outil de d\u00e9placment).</li> <li>Tester les effets de rotation en utilisant les nouveaux indicateurs (cercles vert, rouge, bleu).</li> <li>Utiliser l'inspecteur pour placer le joueur \u00e0 : X = -5 et Y = 0, toutes les rotations \u00e0 0</li> </ul>"},{"location":"environement/#editer-un-script","title":"\u00c9diter un script","text":"<ul> <li>Dans la fen\u00eatre de projet s\u00e9lectionner le dossier Scripts et double cliquer MvmtJoueur.</li> <li>L'\u00e9diteur de code s\u00e9lectionn\u00e9 pendant l'installation s'ouvre avec le script charg\u00e9.</li> <li>Analyser le script et ajouter le mouvement vertical en assignant la touche W et S aux d\u00e9placements vers le haut et le bas respectivement.</li> <li>Sauvegarder le script.</li> <li>Tester le r\u00e9sultat en mode jeu, le joueur devrait pouvoir se d\u00e9placer dans toutes les directions.</li> </ul>"},{"location":"environement/#references-et-approfondissement","title":"R\u00e9f\u00e9rences et approfondissement","text":"<ul> <li>Fen\u00eatre de projet</li> <li>Fen\u00eatre de hi\u00e9rarchie</li> <li>Inspecteur</li> </ul>"},{"location":"environement/#aller-plus-loin","title":"Aller plus loin","text":"<ul> <li>Ajouter 2 ast\u00e9roides \u00e0 la sc\u00e8ne, le visuel est dans le dossier Art.</li> <li>Cr\u00e9er un nouveau script dans le dossier Scripts.</li> <li>En s'inspirant du script de d\u00e9placement du vaisseau, utiliser la composante rotation pour faire tourner les ast\u00e9roides sur eux-m\u00eame.</li> <li>Assigner le script aux 2 ast\u00e9roides et tester la sc\u00e8ne.</li> </ul>"},{"location":"installation/","title":"Installation du moteur Unity","text":"<p>Comp\u00e9tence cibl\u00e9e</p> <p>00SW - 2 : Pr\u00e9parer l\u2019environnement de d\u00e9veloppement informatique</p> <ul> <li>T\u00e9l\u00e9charger et installer Unity Hub</li> </ul> <p></p> <ul> <li> <p>Cr\u00e9er un compte Unity pour se connecter \u00e0 Unity Hub</p> </li> <li> <p>Dans la section Installs choisir l'installation de la version LTS la plus r\u00e9cente (la version peut-\u00eatre diff\u00e9rente selon la date d'installation)</p> </li> </ul> <p></p> <p></p> <ul> <li>Ajouter les modules Android et Windows (ou autre selon le syst\u00e8me d'exploitation utilis\u00e9)</li> </ul> <p></p> <ul> <li> <p>\u00c0 NOTER : un outil de d\u00e9veloppement pour le code devrait d\u00e9j\u00e0 \u00eatre install\u00e9. Si ce n'est pas le cas, il est recommand\u00e9 d'utiliser Visual Studio Community </p> </li> <li> <p>Accepter les termes et conditions puis proc\u00e9der \u00e0 l'installation</p> </li> </ul>"},{"location":"jeux2d/","title":"Jeux en 2 dimensions","text":"<p>\u00c9l\u00e9ments de comp\u00e9tence cibl\u00e9s</p> <p>00SW - 1 : Analyser le projet de d\u00e9veloppement de l\u2019application</p> <p>Habilet\u00e9s</p> <ul> <li>Comprendre le m\u00e9canisme de simulation en temps r\u00e9el</li> <li>D\u00e9cortiquer les \u00e9l\u00e9ments du jeu \u00e0 r\u00e9aliser</li> </ul>"},{"location":"jeux2d/#un-jeu-ou-une-simulation","title":"Un jeu ou une simulation?","text":"<p>Un jeu d'ordinateur est en fait la simulation d'un environnement. Le concepteur d\u00e9termine les r\u00e8gles du monde dans lequel l'utilisateur se retrouve. Elle devient un jeu lorsque le concepteur d\u00e9finit des interactions stimulantes, un  but d\u00e9sirable, une progression accroheuse, un th\u00e8me visuel excitant... Une myriade de facteurs peuvent retenir l'int\u00e9r\u00eat du joueur</p>"},{"location":"jeux2d/#la-boucle-de-jeu","title":"La boucle de jeu","text":"<p>Que le jeu soit d\u00e9velopp\u00e9 \u00e0 partir d'un code original ou impl\u00e9ment\u00e9 au moyen d'un moteur (Unity dans le cadre du cours), il s'appuie toujours sur une boucle pour donner l'illusion d'une r\u00e9alit\u00e9 alternative.</p>"},{"location":"jeux2d/#phase-1-initialisation","title":"Phase 1 : Initialisation","text":"<p>Avant de d\u00e9marrer la boucle il y a toujours une phase d'initialisation. Que ce soit le chargement initial, un changement de niveau ou m\u00eame l'apparition d'un nouvel ennemi, il faudra pr\u00e9parer l'\u00e9tat de d\u00e9part avant de passer \u00e0 l'action!</p>"},{"location":"jeux2d/#phase-2-mise-a-jour","title":"Phase 2 : Mise \u00e0 Jour","text":"<p>La mise \u00e0 jour fait partie int\u00e9grante de la boucle. Cette \u00e9tape g\u00e8re entre autre : - La saisie et la r\u00e9action aux commandes de l'utilisateur - La progression du jeu  - L'impl\u00e9mentation des r\u00e8gles et des m\u00e9caniques du jeu</p> <p>C'est \u00e0 cet endroit que la majorit\u00e9 de la logique de jeu est appliqu\u00e9e</p>"},{"location":"jeux2d/#phase-3-affichage","title":"Phase 3 : Affichage","text":"<p>Enfin les \u00e9l\u00e9ments sont affich\u00e9s (ou diffus\u00e9s dans le cas de l'environnement sonore). Une phase qui est cruciale pour que le joueur puisse appr\u00e9cier le r\u00e9sultat de ses actions et constater l'\u00e9tat mis \u00e0 jour du jeu.</p>"},{"location":"jeux2d/#types-de-jeux-en-2-dimensions","title":"Types de jeux en 2 dimensions","text":""},{"location":"jeux2d/#jeux-a-ecran-simple","title":"Jeux \u00e0 \u00e9cran simple","text":"<ul> <li>Cam\u00e9ra fixe</li> <li>Vue de haut ou de c\u00f4t\u00e9</li> <li>Genres fr\u00e9quents : arcade, puzzle, rythme</li> <li>Quelques exemples : casse-brique, Tetris, Guitar Hero, Street Fighter</li> </ul>"},{"location":"jeux2d/#jeux-a-defilement","title":"Jeux \u00e0 d\u00e9filement","text":"<ul> <li>La cam\u00e9ra suit le joueur</li> <li>Vue de haut, de c\u00f4t\u00e9, isom\u00e9trique</li> <li>Genres f\u00e9quents : course, action/aventure, platformer, combat, roguelite</li> <li>Quelques exemples : Zelda, Double Dragon, Super Mario, Hotline Miami</li> </ul> <p>Les types et genres peuvent \u00eatre combin\u00e9s. Plusieurs jeux jonglent entre les diff\u00e9rents concepts pour cr\u00e9er une exp\u00e9rience unique!</p>"},{"location":"jeux2d/#un-domaine-oriente-objet","title":"Un domaine orient\u00e9 objet","text":"<p>Les exercices d'apprentissage en programmation orient\u00e9e objet utilisent f\u00e9quement des items de la vie courante comme : un v\u00e9lo, une voiture, une personne, etc...</p> <p>Le jeu tente de cr\u00e9er un monde virtuel par cons\u00e9quent il faudra d\u00e9crire chacun des \u00e9l\u00e9ments du jeu par programmation. Exemples : une voiture, une personne, un outils, etc...</p> <p>Le lien entre le jeu (ou la simulation) et la conception orient\u00e9e objet est tr\u00e8s fort. Les moteurs de jeu offrent toujours au d\u00e9veloppeurs un objet de base qui permet de concr\u00e9tiser un \u00e9l\u00e9ment. </p> <p>Dans le cadre du cours le moteur Unity utilise le GameObject, une classe flexible et extensible. En analysant l'image ci-dessous, quelques GameObjects peuvent \u00eatre identifi\u00e9s.</p> <p></p> <ul> <li>La balle</li> <li>Le joueur (palette)</li> <li>Les briques (plusieurs objets ou un objet parent avec des h\u00e9riti\u00e9s)</li> <li>Les murs</li> </ul>"},{"location":"jeux2d/#en-pratique","title":"En pratique","text":"<p>\u00c0 partir de l'image fournie exclusivement, identifier les diff\u00e9rents GameObject possibles pour le jeu Super Mario World.</p> <p></p>"},{"location":"jeux2d/#document-de-conception","title":"Document de conception","text":"<p>Les jeux et simulations commencent toujours par une id\u00e9e mais son impl\u00e9mentation n\u00e9cessite beaucoup plus d'organisation. Que ce soit sur une collection de bouts de papiers, dans un fichier correctement formatt\u00e9 ou un heureux m\u00e9lange des deux, le point de d\u00e9part est le de document de conception du jeu.</p> <p>Dans le cadre du cours il sera plus limit\u00e9 mais tout aussi n\u00e9cessaire, ne serait-ce que pour organiser le travail \u00e0 r\u00e9aliser.</p> <p>Il n'y a pas de mod\u00e8le d\u00e9finitif et universellement accept\u00e9 pour ce document. En revanche, il contient toujours l'id\u00e9e derri\u00e8re le jeu, le d\u00e9tail des \u00e9l\u00e9ments du jeu, l'explication des m\u00e9caniques, la m\u00e9thode pour cr\u00e9er l'envie de jouer et l'\u00e9bauche du visuel d\u00e9sir\u00e9.</p>"},{"location":"jeux2d/#en-pratique_1","title":"En pratique","text":"<ul> <li>T\u00e9l\u00e9charger les documents de conception Dirty Bomb et Zombie Toys, dans la section fichier de votre groupe Teams pour le cours.</li> <li>Analyser la structure des documents et comparer les informations regroup\u00e9es dans chacun.</li> <li>Seul ou en \u00e9quipe de 2, en vous inspirant des documents analys\u00e9s, cr\u00e9er le mod\u00e8le de document de conception que vous utiliserez au cours de la session.</li> </ul>"},{"location":"mouvement/","title":"Mouvement","text":"<p>Comp\u00e9tences cibl\u00e9es</p> <p>00SW - 3 : G\u00e9n\u00e9rer des repr\u00e9sentations de mondes r\u00e9els ou imaginaires 00SW - 4 : Programmer la logique du jeu ou de la simulation</p> <p>Habilet\u00e9s</p> <ul> <li>Choisir et utiliser les \u00e9l\u00e9ments graphiques pour l'affichage et la saisie</li> <li>Int\u00e9grer les images </li> <li>Utiliser les moteurs de jeu ou de simulation</li> <li>Programmer les comportements des \u00e9l\u00e9ments graphiques et des p\u00e9riph\u00e9riques</li> </ul>"},{"location":"mouvement/#creer-un-nouveau-projet-de-developpement","title":"Cr\u00e9er un nouveau projet de d\u00e9veloppement","text":"<ul> <li>D\u00e9marrer Unity Hub.</li> <li>Dans la section Projects, choisir New Project.</li> <li>Choisir Universal 2D.</li> <li>Nommer le projet et choisir l'emplacement o\u00f9 le projet sera enregistr\u00e9</li> <li>D\u00e9cocher Connect to Unity Cloud</li> <li>Choisir Create Project</li> </ul>"},{"location":"mouvement/#importer-des-ressources","title":"Importer des ressources","text":"<p>Le magasin en ligne de Unity (Asset Store) poss\u00e8de une game \u00e9tendue de ressources pour les c\u00e9rateurs. Dans le cadre du cours ce magasin sera utilis\u00e9 pour se procurer les images et sons pour les projets. Il est bien s\u00fbr possible d'utiliser plusieurs autres sources gratuites disponibles en ligne.</p> <p>Lors de l'importation de ressources du Asset Store, Unity fait usage du Package Manager. C'est un outil utilis\u00e9 tr\u00e8s fr\u00e9quement pour \u00e9tendre les fonctionnalit\u00e9s de Unity selon nos besoin ou, bien s\u00fbr, importer des ressources pour nos projets.</p> <p>Le package manager se retrouve dans le menu Window &gt; Package Manager</p>"},{"location":"mouvement/#en-pratique","title":"En pratique","text":"<ul> <li>Ouvrir le magasin en ligne \u00e0 partir d'un navigateur Unity Asset Store.</li> <li>Prendre un moment pour explorer les ressources disponibles, notamment les ressources 2D.</li> <li>Trouver la ressource : 2D Space Kit.</li> <li>Cliquer Add to My Assets.</li> <li>Accepter les termes d'utilisation (apr\u00e8s les avoir lu... non).</li> <li>En haut de la page, choisir Open in Unity, il faut que votre projet soit d\u00e9j\u00e0 ouvert.</li> <li>Unity ouvre le Package Manager avec vos ressrouces d\u00e9j\u00e0 s\u00e9lectionn\u00e9es.</li> <li>Cliquer sur Download et une fois le t\u00e9l\u00e9chargement fini sur Import (L'importation est n\u00e9cessaire).</li> </ul> <ul> <li>Une nouvelle fen\u00eatre permet de s\u00e9lectionner seulement quelques \u00e9l\u00e9ments. Choisir Import.</li> </ul> <ul> <li>Il se peut que Unity demande la mise \u00e0 jour de certains \u00e9l\u00e9ments. Accepter la mise \u00e0 jour pour tous les fichiers et les prochains.</li> </ul> <ul> <li>Explorer les ressources t\u00e9l\u00e9charg\u00e9es.</li> </ul>"},{"location":"mouvement/#travailler-avec-des-images","title":"Travailler avec des images","text":"<p>Les images (.jpg, .png, etc...) qui sont utilis\u00e9es en jeux vid\u00e9o sont appel\u00e9es sprites. Lorsqu'un GameObject est cr\u00e9e en le glissant dans la sc\u00e8ne ou manuellement un composant SpriteRenderer est automatiquement ajout\u00e9. Les sprites sont la ressource visuelle principale des jeux en 2 dimensions.</p>"},{"location":"mouvement/#en-pratique_1","title":"En pratique","text":"<ul> <li>Parmi les ressources acquises, choisir un vaisseau pour repr\u00e9senter le joueur.</li> <li>Glisser l'image directement dans la fen\u00eatre Hierarchy.</li> <li>Le vaisseau appara\u00eet directement au centre de la fen\u00eatre de sc\u00e8ne et le GameObject est dans la hi\u00e9rarchie.</li> <li>S\u00e9lectionner le nouveau GameObject et le renommer Joueur dans l'inspecteur.</li> </ul> <ul> <li>R\u00e9p\u00e9ter le processus pour l'image de fond en s\u00e9lectionnant parmi les images du dossier : 2D SpaceKit &gt; Backgrounds</li> <li>Renommer le GameObject : Fond</li> </ul>"},{"location":"mouvement/#ordre-de-rendu","title":"Ordre de rendu","text":"<p>Avec l'ajout d'un fond, le joueur n'est plus visible dans la sc\u00e8ne. En mode 2D tout les \u00e9l\u00e9ments sont dessin\u00e9s \u00e0 la m\u00eame hauteur par d\u00e9faut.</p> <p>En d\u00e9terminant la hauteur des sprites il est possible de cr\u00e9er plusieurs illusions de profondeurs. </p> <p></p>"},{"location":"mouvement/#en-pratique_2","title":"En pratique","text":"<ul> <li>Rep\u00e9rer la propri\u00e9t\u00e9 Order In Layer du GameObject Fond au moyen de l'inspecteur. C'est une propri\u00e9t\u00e9 de la composante Sprite Renderer.</li> <li>Plus la valeur est haute plus un sprite est affich\u00e9 au-dessus des autres et vice-versa.</li> <li>Modifier le propri\u00e9t\u00e9 Order In Layer du fond pour -10. </li> </ul>"},{"location":"mouvement/#saisie-des-interactions","title":"Saisie des interactions","text":"<p>En d\u00e9couvrant l'environement de travail, le script pr\u00e9sent\u00e9 permet de d\u00e9placer le joueur. Cependant, s'il faut programmer les d\u00e9placement pour le clavier ET une manette, le code devient rapidement lourd car il faut d\u00e9tailler les effet pour chaque int\u00e9raction. De plus, une manette peut aller vers la droite compl\u00e8tement ou en partie. Dans plusieurs jeux de console le personnage se d\u00e9place plus ou moins vite selon la position du manche.</p> <p>Pour rendre le code plus efficace et tenir compte des diff\u00e9rentes m\u00e9thodes d'interaction (flexible), Unity a d\u00e9velopper l'extension Input System. Cette extension permet de d\u00e9finir des Input Action.</p> <p>Une Input Action est quelque chose que le joueur peut faire dans le jeu : se d\u00e9placer, tirer, int\u00e9ragir avec un personnage, etc...</p> <p>L'Input Action est utilis\u00e9e dans le code pour s\u00e9parer la logique du type de mat\u00e9riel utilis\u00e9. Par exmple, Lorsqu'il faut configurer une nouvelle fa\u00e7on de d\u00e9placer le joueur, il n'y a qu'\u00e0 lier la Input Action d\u00e9sir\u00e9e au nouveau contr\u00f4leur</p> <p>Il faut t\u00e9l\u00e9charger et activer cette extension pour l'utiliser.</p>"},{"location":"mouvement/#en-pratique_3","title":"En pratique","text":""},{"location":"mouvement/#installer-lextension-input-system","title":"Installer l'extension Input System","text":"<ul> <li>Ouvrir le gestionnaire d'extensions avec le menu Windows &gt; Package Manager</li> <li>S'assurer que le filtre est \u00e0 : Unity Registry</li> <li>Rep\u00e9rer et installer l'extension Input System</li> </ul> <ul> <li>Pour utiliser l'extension Unity doit activer d'autres \u00e9l\u00e9ments, heureusement il offre de les faire des l'installation. Accepter les modifications et laisser l'\u00e9diteur se recharger.</li> </ul>"},{"location":"mouvement/#definir-une-input-action-directement","title":"D\u00e9finir une Input Action directement","text":"<ul> <li>Cr\u00e9er le dossier Scripts dans le dossier Assets.</li> <li>Utiliser le menu contextuel (clique droit) pour cr\u00e9er un nouveau script Create &gt; C# Script.</li> <li>Renommer le script JoueurCtrl et l'ajouter aux composantes du GameObject Joueur.</li> <li>Ouvrir le script et ajouter l'attribut <code>public InputAction GaucheAction;</code> \u00e0 la classe et sauvegarder le script.</li> <li>Remarquer le changement dans l'inspecteur pour le Joueur. On y retrouve l'action d\u00e9finie dans le script.</li> </ul> <ul> <li>S\u00e9lectionner les propri\u00e9t\u00e9s de l'action (l'engrenage \u00e0 droite du nom).</li> <li>Configurer Action Type pour que ce soit un Button.</li> </ul>"},{"location":"mouvement/#lier-laction-gauche-a-un-bouton","title":"Lier l'action Gauche \u00e0 un bouton","text":"<ul> <li>Ajouter un lien Add Binding avec le bouton + de GaucheAction.</li> <li>Double cliquer le Binding vide pour GaucheAction</li> <li>D\u00e9velopper le menu d\u00e9roulant de la propri\u00e9t\u00e9 Path et s\u00e9lectionner Listen.</li> <li>Enfoncer la touche A et s\u00e9lectionner A [Keyboard] pour la d\u00e9finition de l'interaction.</li> </ul>"},{"location":"mouvement/#scripter-le-comportement","title":"Scripter le comportement","text":"<ul> <li>Il faut avant tout activer l'action au niveau du script.</li> <li>Ajouter <code>GaucheAction.Enable()</code> \u00e0 la m\u00e9thode Start().</li> <li>Modifier la m\u00e9thode update pour que le code soit: </li> </ul> <pre><code>    Vector2 position = transform.position;\n    float horizontal = 0.0f;\n\n    if (GaucheAction.IsPressed())\n    { \n        horizontal = -1.0f;\n    }\n\n    position.x = position.x + 0.1f + horizontal;\n    transform.position = position;\n</code></pre> <ul> <li>Tester le jeu et confirmer que le joueur se d\u00e9place vers la gauche and utilisant la touche A</li> </ul>"},{"location":"mouvement/#definir-une-input-action-par-valeur","title":"D\u00e9finir une Input Action par Valeur","text":"<p>L'action d\u00e9finie pr\u00e9c\u00e9dement est polyvalente pour l'int\u00e9raction (clavier, souris, manette ou autre) mais lorsqu'il s'agit de mouvement le code reste charger car il faut d\u00e9finir chaque direction.</p> <p>Unity fournit une m\u00e9thode pour simplifier encore plus le traitement du d\u00e9placement. L'Input Action par valeur. Au lieu de retourner 0 ou 1 si une touche est enfonc\u00e9e ou non, elle retourne une valeur de 0 \u00e0 1 ou m\u00eame un vecteur (Vector2 dans notre cas) repr\u00e9sentant la direction et l'amplitude du d\u00e9placement.</p> <ul> <li>Ouvrir le script JoueurCtrl.</li> <li>Remplacer l'attribut publique GaucheAction par <code>public InputAction MvmtAction;</code>.</li> <li>Activer l'action dans la m\u00e9thode <code>Start()</code> de la m\u00eame fa\u00e7on que pour l'Input Action pr\u00e9c\u00e9dente.</li> <li>Modifier la m\u00e9thode update pour que le code devienne:</li> </ul> <pre><code>    // ReadValue r\u00e9cup\u00e8re la valeur de l'action plut\u00f4t qu'un r\u00e9sultat binaire (enfonc\u00e9 ou non)\n    Vector2 mouvement = MvmtAction.ReadValue&lt;Vector2&gt;();\n    Vector2 position = (Vector2)transform.position + mouvement * 0.1f;\n    transform.position = position;\n</code></pre> <ul> <li>Dans l'inspecteur du GameObject Joueur, ajouter une liaison de type composite Add Up/Down/Left/Right Composite.</li> <li>Cette liaison comporte 4 enfants, configurer chaque enfant pour les touches W:haut, A:gauche, S:bas, D:droite, en utilisant la m\u00eame m\u00e9thode que celle de la liaison par Button.</li> </ul> <p> </p> <ul> <li>Passer en mode jeu et tester le r\u00e9sultat. Le joueur devrait pouvoir se d\u00e9placer dans toutes les directions.</li> </ul>"},{"location":"mouvement/#references-et-approfondissement","title":"R\u00e9f\u00e9rences et approfondissement","text":"<p>Les Sprites Composante Sprite Renderer Input System</p>"}]}