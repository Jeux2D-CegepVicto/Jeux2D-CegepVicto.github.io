{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Jeux 2D - C\u00e9gep de Victoriaville","text":""},{"location":"#enseignant","title":"Enseignant","text":"<p>Chaieb, Cirine</p>"},{"location":"#horaire","title":"Horaire","text":"<p>\u00c0 venir</p>"},{"location":"#planification-de-la-session","title":"Planification de la session","text":"<p>\u00c0 venir</p>"},{"location":"environement/","title":"Environement de d\u00e9veloppement","text":"<p>\u00c9l\u00e9ments de comp\u00e9tence cibl\u00e9s</p> <p>00SW - 2 : Pr\u00e9parer l\u2019environnement de d\u00e9veloppement informatique 00SW - 3 : G\u00e9n\u00e9rer des repr\u00e9sentations de mondes r\u00e9els ou imaginaires</p> <p>Habilet\u00e9s</p> <ul> <li>Installer les biblioth\u00e8ques</li> <li>Configurer le syst\u00e8me de gestion de versions</li> <li>Importer le code source</li> <li>Int\u00e9grer des images, scripts et objets</li> </ul>"},{"location":"environement/#le-moteur-de-jeu-unity","title":"Le moteur de jeu Unity","text":""},{"location":"installation/","title":"Installation du moteur Unity","text":"<p>Comp\u00e9tence cibl\u00e9e</p> <p>00SW - 2 : Pr\u00e9parer l\u2019environnement de d\u00e9veloppement informatique</p> <ul> <li>T\u00e9l\u00e9charger et installer Unity Hub</li> </ul> <p></p> <ul> <li> <p>Cr\u00e9er un compte Unity pour se connecter \u00e0 Unity Hub</p> </li> <li> <p>Dans la section Installs choisir l'installation de la version LTS la plus r\u00e9cente (la version peut-\u00eatre diff\u00e9rente selon la date d'installation)</p> </li> </ul> <p></p> <p></p> <ul> <li>Ajouter les modules Android et Windows (ou autre selon le syst\u00e8me d'exploitation utilis\u00e9)</li> </ul> <p></p> <ul> <li> <p>\u00c0 NOTER : un outil de d\u00e9veloppement pour le code devrait d\u00e9j\u00e0 \u00eatre install\u00e9. Si ce n'est pas le cas, il est recommand\u00e9 d'utiliser Visual Studio Community </p> </li> <li> <p>Accepter les termes et conditions puis proc\u00e9der \u00e0 l'installation</p> </li> </ul>"},{"location":"jeux2d/","title":"Jeux en 2 dimensions","text":"<p>\u00c9l\u00e9ments de comp\u00e9tence cibl\u00e9s</p> <p>00SW - 1 : Analyser le projet de d\u00e9veloppement de l\u2019application</p> <p>Habilet\u00e9</p> <ul> <li>Comprendre le m\u00e9canisme de simulation en temps r\u00e9el</li> <li>D\u00e9cortiquer les \u00e9l\u00e9ments du jeu \u00e0 r\u00e9aliser</li> </ul>"},{"location":"jeux2d/#un-jeu-ou-une-simulation","title":"Un jeu ou une simulation?","text":"<p>Un jeu d'ordinateur est en fait la simulation d'un environnement. Le concepteur d\u00e9termine les r\u00e8gles du monde dans lequel l'utilisateur se retrouve. Elle devient un jeu lorsque le concepteur d\u00e9finit des interactions stimulantes, un  but d\u00e9sirable, une progression accroheuse, un th\u00e8me visuel excitant... Une myriade de facteurs peuvent retenir l'int\u00e9r\u00eat du joueur</p>"},{"location":"jeux2d/#la-boucle-de-jeu","title":"La boucle de jeu","text":"<p>Que le jeu soit d\u00e9velopp\u00e9 \u00e0 partir d'un code original ou impl\u00e9ment\u00e9 au moyen d'un moteur (Unity dans le cadre du cours), il s'appuie toujours sur une boucle pour donner l'illusion d'une r\u00e9alit\u00e9 alternative.</p>"},{"location":"jeux2d/#phase-1-initialisation","title":"Phase 1 : Initialisation","text":"<p>_       ___    _  ___      ____    ____  | |     /   \\  /    ||   \\  |    ||    \\  /    | | |    |     ||  o  ||    \\  |  | |  _  ||   __| | |___ |  O  ||     ||  D  | |  | |  |  ||  |  | |     ||     ||  _  ||     | |  | |  |  ||  | | |     ||     ||  |  ||     | |  | |  |  ||     | |_| _/ ||||_|||||__||___,_|</p> <p>Avant de d\u00e9marrer la boucle il y a toujours une phase d'initialisation. Que ce soit le chargement initial, un changement de niveau ou m\u00eame l'apparition d'un nouvel ennemi, il faudra pr\u00e9parer l'\u00e9tat de d\u00e9part avant de passer \u00e0 l'action!</p>"},{"location":"jeux2d/#phase-2-mise-a-jour","title":"Phase 2 : Mise \u00e0 Jour","text":"<p>La mise \u00e0 jour fait partie int\u00e9grante de la boucle. Cette \u00e9tape g\u00e8re entre autre : - La saisie et la r\u00e9action aux commandes de l'utilisateur - La progression du jeu  - L'impl\u00e9mentation des r\u00e8gles et des m\u00e9caniques du jeu</p> <p>C'est \u00e0 cet endroit que la majorit\u00e9 de la logique de jeu est appliqu\u00e9e</p>"},{"location":"jeux2d/#phase-3-affichage","title":"Phase 3 : Affichage","text":"<p>Enfin les \u00e9l\u00e9ments sont affich\u00e9s (ou diffus\u00e9s dans le cas de l'environnement sonore). Une phase qui est cruciale pour que le joueur puisse appr\u00e9cier le r\u00e9sultat de ses actions et constater l'\u00e9tat mis \u00e0 jour du jeu.</p>"},{"location":"jeux2d/#types-de-jeux-en-2-dimensions","title":"Types de jeux en 2 dimensions","text":""},{"location":"jeux2d/#jeux-a-ecran-simple","title":"Jeux \u00e0 \u00e9cran simple","text":"<ul> <li>Cam\u00e9ra fixe</li> <li>Vue de haut ou de c\u00f4t\u00e9</li> <li>Genres fr\u00e9quents : arcade, puzzle, rythme</li> <li>Quelques exemples : casse-brique, Tetris, Guitar Hero, Street Fighter</li> </ul>"},{"location":"jeux2d/#jeux-a-defilement","title":"Jeux \u00e0 d\u00e9filement","text":"<ul> <li>La cam\u00e9ra suit le joueur</li> <li>Vue de haut, de c\u00f4t\u00e9, isom\u00e9trique</li> <li>Genres f\u00e9quents : course, action/aventure, platformer, combat, roguelite</li> <li>Quelques exemples : Zelda, Double Dragon, Super Mario, Hotline Miami</li> </ul> <p>Les types et genres peuvent \u00eatre combin\u00e9s. Plusieurs jeux jonglent entre les diff\u00e9rents concepts pour cr\u00e9er une exp\u00e9rience unique!</p>"},{"location":"jeux2d/#un-domaine-oriente-objet","title":"Un domaine orient\u00e9 objet","text":"<p>Les exercices d'apprentissage en programmation orient\u00e9e objet utilisent f\u00e9quement des items de la vie courante comme : un v\u00e9lo, une voiture, une personne, etc...</p> <p>Le jeu tente de cr\u00e9er un monde virtuel par cons\u00e9quent il faudra d\u00e9crire chacun des \u00e9l\u00e9ments du jeu par programmation. Exemples : une voiture, une personne, un outils, etc...</p> <p>Le lien entre le jeu (ou la simulation) et la conception orient\u00e9e objet est tr\u00e8s fort. Les moteurs de jeu offrent toujours au d\u00e9veloppeurs un objet de base qui permet de concr\u00e9tiser un \u00e9l\u00e9ment. </p> <p>Dans le cadre du cours le moteur Unity utilise le GameObject, une classe flexible et extensible. En analysant l'image ci-dessous, quelques GameObjects peuvent \u00eatre identifi\u00e9s.</p>"},{"location":"jeux2d/#document-de-conception","title":"Document de conception","text":""},{"location":"mouvement/","title":"Mouvement","text":"<p>Comp\u00e9tences cibl\u00e9es</p> <p>00SW - 3 : G\u00e9n\u00e9rer des repr\u00e9sentations de mondes r\u00e9els ou imaginaires 00SW - 4 : Programmer la logique du jeu ou de la simulation</p> <p>Habilet\u00e9s</p> <p>Choisir et utiliser les \u00e9l\u00e9ments graphiques pour l'affichage et la saisie Int\u00e9grer les images </p> <p>Utiliser les moteurs de jeu ou de simulation Programmer les comportements des \u00e9l\u00e9ments graphiques et des p\u00e9riph\u00e9riques</p>"}]}